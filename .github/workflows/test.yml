---
on: push

env:
  MAIN_PHP_VERSION: 7.4

jobs:
  "composer-validate":
    name: "Composer validate"
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/workflows/test_prepare.yml
        with:
          php_version: $MAIN_PHP_VERSION
      - run:
          bash .Build/bin/t3_run_tests.sh -s composerValidate -p $MAIN_PHP_VERSION

  "check-codestyle":
    name: "PHP code style check"
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/workflows/test_prepare.yml
        with:
          php_version: $MAIN_PHP_VERSION
      - run:
          bash .Build/bin/t3_check_codestyle.sh PSRTinyurls

  "php-unit-tests":
    name: "PHP Unit tests"
    strategy:
      matrix:
        php_version: ["7.3", "$MAIN_PHP_VERSION"]
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/workflows/test_prepare.yml
        with:
          php_version: $php_version
      - run:
          bash .Build/bin/t3_run_tests.sh -s unit -p $php_version

  "php-functional-tests-sqlite-73":
    name: "Functional tests on SQLite PHP 7.3"
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/workflows/test_prepare.yml
        with:
          php_version: 7.3
      - run:
          bash .Build/bin/t3_run_tests.sh -s functional -d sqlite -p 7.3

  "php-functional-tests-mysql-main":
    name: "Functional tests on MySQL"
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/workflows/test_prepare.yml
        with:
          php_version: $MAIN_PHP_VERSION
      - run:
          bash .Build/bin/t3_run_tests.sh -s functional -p $MAIN_PHP_VERSION

  "php-lint":#
    name: "PHP linting"
    strategy:
      matrix:
        php_version: ["7.3", "$MAIN_PHP_VERSION"]
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/workflows/test_prepare.yml
        with:
          php_version: $php_version
      - run:
          bash .Build/bin/t3_run_tests.sh -s lint -p $php_version
